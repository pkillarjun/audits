#include "verifier.h"
#include "create_discriminant.h"

#define kMinInputLength 10
#define kMaxInputLength 5120

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {

    if (Size < kMinInputLength || Size > kMaxInputLength){
        return 1;
    }

    try
    {
        bool is_valid = CheckProofOfTimeNWesolowski(
            integer("-131653324254138636653163861414331698305531090221496467927360326686715180966094250598321899621249972220387687148397451395672779897144571112116763666653213748473909547482437246405018707472153290116227072825447643324530509016778432769802300913461285128339119844239772697652504835780459732685000796733645621728639"),
            DEFAULT_ELEMENT,
            Data,
            Size,
            33554432,
            1024,
            2);
    }
    catch(const std::exception& e)
    {
        /* Nothing !*/
    }

    //try
    //{
    //    form proof = DeserializeForm(
    //        integer("-131653324254138636653163861414331698305531090221496467927360326686715180966094250598321899621249972220387687148397451395672779897144571112116763666653213748473909547482437246405018707472153290116227072825447643324530509016778432769802300913461285128339119844239772697652504835780459732685000796733645621728639"),
    //        Data,
    //        Size);
    //}
    //catch(const std::exception& e)
    //{
    //    /* Nothing !*/
    //}

    return 0;
}
