diff --git a/fbclock/daemon/math_test.go b/fbclock/daemon/math_test.go
index ee2f0b5..d8a07db 100644
--- a/fbclock/daemon/math_test.go
+++ b/fbclock/daemon/math_test.go
@@ -124,3 +124,14 @@ func TestPrepareExpressionNotEnoughValues(t *testing.T) {
 	_, err = expr.Evaluate(parameters)
 	require.Error(t, err)
 }
+
+func FuzzPrepareExpression(f *testing.F) {
+
+	f.Add("mean(clockaccuracy, 5) + abs(mean(offset, 5)) + 1.0 * stddev(offset, 4) + 1.0 * stddev(delay, 4) + 1.0 * stddev(freq, 5)")
+	f.Add("abs(mean(offset, 5)) + 1.0 * stddev(missing, 4)")
+	f.Add("mean(offset, 50)")
+
+	f.Fuzz(func(t *testing.T, input string) {
+		prepareExpression(input)
+	})
+}
diff --git a/leaphash/leaphash_test.go b/leaphash/leaphash_test.go
index dc6f55e..ccba2d4 100644
--- a/leaphash/leaphash_test.go
+++ b/leaphash/leaphash_test.go
@@ -29,3 +29,10 @@ func TestHashShouldMatch(t *testing.T) {
 		t.Fatalf("invalid hash value, got '%s', expected '%s'", hash, expected)
 	}
 }
+
+func FuzzCompute(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, input string) {
+		Compute(input)
+	})
+}
diff --git a/ntp/control/packet_test.go b/ntp/control/packet_test.go
index 65176c4..f844461 100644
--- a/ntp/control/packet_test.go
+++ b/ntp/control/packet_test.go
@@ -225,3 +225,32 @@ func TestNTPControlMsg_GetAssociations(t *testing.T) {
 	require.NoError(t, err)
 	require.Equal(t, want, got)
 }
+
+func FuzzNormalizeData(f *testing.F) {
+
+	data_0 := []byte(
+		`version="ntpd 4.2.6p5@1.2349-o Fri Apr 13 12:52:27 UTC 2018 (1)",
+processor="x86_64", system="Linux/4.11.3-61_fbk16_3934_gd064a3c",
+leap=0, stratum=4, precision=-24, rootdelay=64.685, rootdisp=76.350,
+refid=174.141.68.116, reftime=0xdfb39d2d.8598591b,
+clock=0xdfb39fbe.dd542f86, peer=60909, tc=10, mintc=3, offset=-0.180,
+frequency=0.314, sys_jitter=0.246, clk_jitter=0.140, clk_wander=0.009
+`)
+
+	data_1 := []byte(`srcadr=2401:db00:3110:5068:face:0:5c:0, srcport=123,
+dstadr=2401:db00:3110:915d:face:0:5a:0, dstport=123, leap=0, stratum=3,
+precision=-24, rootdelay=83.313, rootdisp=47.607, refid=1.104.123.73,
+reftime=0xdfb8e24c.b57496e4, rec=0xdfb8e395.93319ff3, reach=0xff,
+unreach=0, hmode=3, pmode=4, hpoll=7, ppoll=7, headway=8, flash=0x0,
+keyid=0, offset=0.163, delay=0.136, dispersion=5.123, jitter=0.054,
+xleave=0.022, filtdelay= 0.33 0.16 0.14 0.27 0.27 0.29 0.18 0.24filtoffset= 0.17 0.19 0.16 0.12 0.09 0.11 0.09 0.10,
+filtdisp= 0.00 1.95 3.87 5.79 7.79 9.78 11.72 13.71
+`)
+
+	f.Add(data_0)
+	f.Add(data_1)
+
+	f.Fuzz(func(t *testing.T, input []byte) {
+		NormalizeData(input)
+	})
+}
diff --git a/ptp/c4u/clock/math_test.go b/ptp/c4u/clock/math_test.go
index 59479e2..4658e99 100644
--- a/ptp/c4u/clock/math_test.go
+++ b/ptp/c4u/clock/math_test.go
@@ -78,3 +78,18 @@ func TestMath(t *testing.T) {
 	require.NoError(t, err)
 	require.Equal(t, 5.0, result.(float64))
 }
+
+func FuzzPrepareExpression(f *testing.F) {
+
+	f.Add("lkjdfkj")
+	f.Add("2 + 2")
+	f.Add("mean(phcoffset)")
+	f.Add("max(2, 3)")
+	f.Add("abs(-3)")
+	f.Add("stddev(phcoffset)")
+	f.Add("variance(phcoffset)")
+
+	f.Fuzz(func(t *testing.T, input string) {
+		prepareExpression(input)
+	})
+}
