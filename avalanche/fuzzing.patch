diff --git a/genesis/config_test.go b/genesis/config_test.go
index c7fea58..6409a40 100644
--- a/genesis/config_test.go
+++ b/genesis/config_test.go
@@ -65,3 +65,17 @@ func TestAllocationLess(t *testing.T) {
 		})
 	}
 }
+
+func FuzzConfig(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		parseGenesisJSONBytesToConfig(orig)
+	})
+}
+
+func FuzzAliases(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		Aliases(orig)
+	})
+}
diff --git a/genesis/genesis_test.go b/genesis/genesis_test.go
index 0a49916..3a10636 100644
--- a/genesis/genesis_test.go
+++ b/genesis/genesis_test.go
@@ -494,3 +494,12 @@ func TestAVAXAssetID(t *testing.T) {
 		})
 	}
 }
+
+func FuzzGenesis(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		VMGenesis(orig,constants.AVMID)
+		VMGenesis(orig,constants.EVMID)
+		AVAXAssetID(orig)
+	})
+}
diff --git a/ids/id_test.go b/ids/id_test.go
index 60aeefd..f790774 100644
--- a/ids/id_test.go
+++ b/ids/id_test.go
@@ -239,3 +239,12 @@ func TestIDLess(t *testing.T) {
 	require.True(id1.Less(id2))
 	require.False(id2.Less(id1))
 }
+
+func FuzzIDs(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		foo := ID{}
+		foo.UnmarshalText(orig)
+	})
+}
+
diff --git a/ids/node_id_test.go b/ids/node_id_test.go
index 52c90c8..553b5a2 100644
--- a/ids/node_id_test.go
+++ b/ids/node_id_test.go
@@ -213,3 +213,17 @@ func TestNodeIDLess(t *testing.T) {
 	require.True(id1.Less(id2))
 	require.False(id2.Less(id1))
 }
+
+func FuzzNodeIDb(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		ToNodeID(orig)
+	})
+}
+
+func FuzzNodeIDs(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig string) {
+		NodeIDFromString(orig)
+	})
+}
diff --git a/message/messages_benchmark_test.go b/message/messages_benchmark_test.go
index 597111d..90b5caf 100644
--- a/message/messages_benchmark_test.go
+++ b/message/messages_benchmark_test.go
@@ -133,3 +133,11 @@ func BenchmarkUnmarshalVersion(b *testing.B) {
 		require.NoError(err)
 	}
 }
+
+func FuzzUnmarshal(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		var msg p2p.Message
+		proto.Unmarshal(orig, &msg)
+	})
+}
diff --git a/message/messages_test.go b/message/messages_test.go
index 55f5cf1..fc08aba 100644
--- a/message/messages_test.go
+++ b/message/messages_test.go
@@ -701,3 +701,17 @@ func TestNilInboundMessage(t *testing.T) {
 	require.True(ok)
 	require.NotNil(pingMsg)
 }
+
+
+func FuzzInboundMessage(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		mb, _ := newMsgBuilder(
+			"test",
+			prometheus.NewRegistry(),
+			5*time.Second,
+		)
+
+		mb.parseInbound(orig, ids.EmptyNodeID, func() {})
+	})
+}
\ No newline at end of file
diff --git a/snow/engine/avalanche/vertex/parser_test.go b/snow/engine/avalanche/vertex/parser_test.go
index 8f1f2e9..f9d1e3c 100644
--- a/snow/engine/avalanche/vertex/parser_test.go
+++ b/snow/engine/avalanche/vertex/parser_test.go
@@ -35,3 +35,10 @@ func TestParseValid(t *testing.T) {
 	require.NoError(t, err)
 	require.Equal(t, vtx, parsedVtx)
 }
+
+func FuzzParse(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		Parse(orig)
+	})
+}
\ No newline at end of file
diff --git a/tests/keys_test.go b/tests/keys_test.go
index a3a31b4..7251cad 100644
--- a/tests/keys_test.go
+++ b/tests/keys_test.go
@@ -23,3 +23,10 @@ func TestLoadTestKeys(t *testing.T) {
 func encodeShortAddr(pk *secp256k1.PrivateKey) string {
 	return pk.PublicKey().Address().String()
 }
+
+func FuzzKey(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig string) {
+		decodeHexPrivateKey(orig)
+	})
+}
diff --git a/utils/constants/network_ids_test.go b/utils/constants/network_ids_test.go
index 03b79b8..60ee7d3 100644
--- a/utils/constants/network_ids_test.go
+++ b/utils/constants/network_ids_test.go
@@ -141,3 +141,10 @@ func TestNetworkID(t *testing.T) {
 		})
 	}
 }
+
+func FuzzNetworkID(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig string) {
+		NetworkID(orig)
+	})
+}
diff --git a/version/parser_test.go b/version/parser_test.go
index d53a735..435394f 100644
--- a/version/parser_test.go
+++ b/version/parser_test.go
@@ -56,3 +56,12 @@ func TestParseApplication(t *testing.T) {
 		require.Error(t, err)
 	}
 }
+
+func FuzzParse(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig string) {
+		Parse(orig)
+		ParseApplication(orig)
+		parseVersions(orig)
+	})
+}
diff --git a/vms/components/avax/utxo_id_test.go b/vms/components/avax/utxo_id_test.go
index a35ac02..bf1778a 100644
--- a/vms/components/avax/utxo_id_test.go
+++ b/vms/components/avax/utxo_id_test.go
@@ -213,3 +213,10 @@ func TestUTXOIDFromString(t *testing.T) {
 		})
 	}
 }
+
+func FuzzUTXOID(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig string) {
+		UTXOIDFromString(orig)
+	})
+}
diff --git a/vms/components/message/message_test.go b/vms/components/message/message_test.go
index dbaf154..bbf5977 100644
--- a/vms/components/message/message_test.go
+++ b/vms/components/message/message_test.go
@@ -17,3 +17,10 @@ func TestParseGibberish(t *testing.T) {
 	_, err := Parse(randomBytes)
 	require.Error(t, err)
 }
+
+func FuzzMessage(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		Parse(orig)
+	})
+}
diff --git a/vms/platformvm/api/static_service_test.go b/vms/platformvm/api/static_service_test.go
index e11c1a2..0c125ba 100644
--- a/vms/platformvm/api/static_service_test.go
+++ b/vms/platformvm/api/static_service_test.go
@@ -326,3 +326,11 @@ func TestUTXOLess(t *testing.T) {
 		})
 	}
 }
+
+func FuzzBech32ToID(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig string) {
+		bech32ToID(orig)
+		NewStaticClient(orig)
+	})
+}
diff --git a/vms/platformvm/warp/message_test.go b/vms/platformvm/warp/message_test.go
index 9437553..11b59b6 100644
--- a/vms/platformvm/warp/message_test.go
+++ b/vms/platformvm/warp/message_test.go
@@ -42,3 +42,10 @@ func TestParseMessageJunk(t *testing.T) {
 	_, err := ParseMessage(utils.RandomBytes(1024))
 	require.Error(t, err)
 }
+
+func FuzzParseMessage(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		ParseMessage(orig)
+	})
+}
diff --git a/vms/platformvm/warp/unsigned_message_test.go b/vms/platformvm/warp/unsigned_message_test.go
index cf8073d..5647820 100644
--- a/vms/platformvm/warp/unsigned_message_test.go
+++ b/vms/platformvm/warp/unsigned_message_test.go
@@ -32,3 +32,10 @@ func TestParseUnsignedMessageJunk(t *testing.T) {
 	_, err := ParseUnsignedMessage(utils.RandomBytes(1024))
 	require.Error(t, err)
 }
+
+func FuzzParseUM(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		ParseUnsignedMessage(orig)
+	})
+}
diff --git a/vms/proposervm/block/parse_test.go b/vms/proposervm/block/parse_test.go
index f749960..5b5d123 100644
--- a/vms/proposervm/block/parse_test.go
+++ b/vms/proposervm/block/parse_test.go
@@ -132,3 +132,16 @@ func TestParseGibberish(t *testing.T) {
 	_, err := Parse(bytes)
 	require.Error(err)
 }
+
+
+func FuzzBlock(f *testing.F) {
+	blockHex := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000007b0000000000000002000004bd308204b9308202a1a003020102020100300d06092a864886f70d01010b050030003020170d3939313233313030303030305a180f32313232303830333233323835335a300030820222300d06092a864886f70d01010105000382020f003082020a0282020100c2b2de1c16924d9b9254a0d5b80a4bc5f9beaa4f4f40a0e4efb69eb9b55d7d37f8c82328c237d7c5b451f5427b487284fa3f365f9caa53c7fcfef8d7a461d743bd7d88129f2da62b877ebe9d6feabf1bd12923e6c12321382c782fc3bb6b6cb4986a937a1edc3814f4e621e1a62053deea8c7649e43edd97ab6b56315b00d9ab5026bb9c31fb042dc574ba83c54e720e0120fcba2e8a66b77839be3ece0d4a6383ef3f76aac952b49a15b65e18674cd1340c32cecbcbaf80ae45be001366cb56836575fb0ab51ea44bf7278817e99b6b180fdd110a49831a132968489822c56692161bbd372cf89d9b8ee5a734cff15303b3a960ee78d79e76662a701941d9ec084429f26707f767e9b1d43241c0e4f96655d95c1f4f4aa00add78eff6bf0a6982766a035bf0b465786632c5bb240788ca0fdf032d8815899353ea4bec5848fd30118711e5b356bde8a0da074cc25709623225e734ff5bd0cf65c40d9fd8fccf746d8f8f35145bcebcf378d2b086e57d78b11e84f47fa467c4d037f92bff6dd4e934e0189b58193f24c4222ffb72b5c06361cf68ca64345bc3e230cc0f40063ad5f45b1659c643662996328c2eeddcd760d6f7c9cbae081ccc065844f7ea78c858564a408979764de882793706acc67d88092790dff567ed914b03355330932616a0f26f994b963791f0b1dbd8df979db86d1ea490700a3120293c3c2b10bef10203010001a33c303a300e0603551d0f0101ff0404030204b030130603551d25040c300a06082b0601050507030230130603551d25040c300a06082b06010505070302300d06092a864886f70d01010b05000382020100a21a0d73ec9ef4eb39f810557ac70b0b775772b8bae5f42c98565bc50b5b2c57317aa9cb1da12f55d0aac7bb36a00cd4fd0d7384c4efa284b53520c5a3c4b8a65240b393eeab02c802ea146c0728c3481c9e8d3aaad9d4dd7607103dcfaa96da83460adbe18174ed5b71bde7b0a93d4fb52234a9ff54e3fd25c5b74790dfb090f2e59dc5907357f510cc3a0b70ccdb87aee214def794b316224f318b471ffa13b66e44b467670e881cb1628c99c048a503376d9b6d7b8eef2e7be47ff7d5c1d56221f4cf7fa2519b594cb5917815c64dc75d8d281bcc99b5a12899b08f2ca0f189857b64a1afc5963337f3dd6e79390e85221569f6dbbb13aadce06a3dfb5032f0cc454809627872cd7cd0cea5eba187723f07652c8abc3fc42bd62136fc66287f2cc19a7cb416923ad1862d7f820b55cacb65e43731cb6df780e2651e457a3438456aeeeb278ad9c0ad2e760f6c1cbe276eeb621c8a4e609b5f2d902beb3212e3e45df99497021ff536d0b56390c5d785a8bf7909f6b61bdc705d7d92ae22f58e7b075f164a0450d82d8286bf449072751636ab5185f59f518b845a75d112d6f7b65223479202cff67635e2ad88106bc8a0cc9352d87c5b182ac19a4680a958d814a093acf46730f87da0df6926291d02590f215041b44a0a1a32eeb3a52cddabc3d256689bace18a8d85e644cf9137cce3718f7caac1cb16ae06e874f4c701000000010300000200b8e3a4d9a4394bac714cb597f5ba1a81865185e35c782d0317e7abc0b52d49ff8e10f787bedf86f08148e3dbd2d2d478caa2a2893d31db7d5ee51339883fe84d3004440f16cb3797a7fab0f627d3ebd79217e995488e785cd6bb7b96b9d306f8109daa9cfc4162f9839f60fb965bcb3b56a5fa787549c153a4c80027398f73a617b90b7f24f437b140cd3ac832c0b75ec98b9423b275782988a9fd426937b8f82fbb0e88a622934643fb6335c1a080a4d13125544b04585d5f5295be7cd2c8be364246ea3d5df3e837b39a85074575a1fa2f4799050460110bdfb20795c8a9172a20f61b95e1c5c43eccd0c2c155b67385366142c63409cb3fb488e7aba6c8930f7f151abf1c24a54bd21c3f7a06856ea9db35beddecb30d2c61f533a3d0590bdbb438c6f2a2286dfc3c71b383354f0abad72771c2cc3687b50c2298783e53857cf26058ed78d0c1cf53786eb8d006a058ee3c85a7b2b836b5d03ef782709ce8f2725548e557b3de45a395a669a15f1d910e97015d22ac70020cab7e2531e8b1f739b023b49e742203e9e19a7fe0053826a9a2fe2e118d3b83498c2cb308573202ad41aa4a390aee4b6b5dd2164e5c5cd1b5f68b7d5632cf7dbb9a9139663c9aac53a74b2c6fc73cad80e228a186ba027f6f32f0182d62503e04fcced385f2e7d2e11c00940622ebd533b4d144689082f9777e5b16c36f9af9066e0ad6564d43"
+	blockBytes, _ := hex.DecodeString(blockHex)
+
+	f.Add(blockBytes)
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		Parse(orig)
+		ParseHeader(orig)
+	})
+}
diff --git a/vms/proposervm/summary/parse_test.go b/vms/proposervm/summary/parse_test.go
index 3d527e2..3e5954a 100644
--- a/vms/proposervm/summary/parse_test.go
+++ b/vms/proposervm/summary/parse_test.go
@@ -37,3 +37,10 @@ func TestParseGibberish(t *testing.T) {
 	_, err := Parse(bytes)
 	require.Error(err)
 }
+
+func FuzzParse(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		Parse(orig)
+	})
+}
diff --git a/x/merkledb/node_test.go b/x/merkledb/node_test.go
index 7c7c257..3d34be4 100644
--- a/x/merkledb/node_test.go
+++ b/x/merkledb/node_test.go
@@ -67,3 +67,10 @@ func Test_Node_Marshal_Errors(t *testing.T) {
 		require.ErrorIs(t, err, io.ErrUnexpectedEOF)
 	}
 }
+
+func FuzzNode(f *testing.F) {
+
+	f.Fuzz(func(t *testing.T, orig []byte) {
+		parseNode(newPath([]byte("")), orig)
+	})
+}
